<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>AMApplicationBuild</key>
	<string>346</string>
	<key>AMApplicationVersion</key>
	<string>2.3</string>
	<key>AMDocumentVersion</key>
	<string>2</string>
	<key>actions</key>
	<array>
		<dict>
			<key>action</key>
			<dict>
				<key>AMAccepts</key>
				<dict>
					<key>Container</key>
					<string>List</string>
					<key>Optional</key>
					<true/>
					<key>Types</key>
					<array>
						<string>com.apple.applescript.object</string>
					</array>
				</dict>
				<key>AMActionVersion</key>
				<string>1.0.2</string>
				<key>AMApplication</key>
				<array>
					<string>Automator</string>
				</array>
				<key>AMParameterProperties</key>
				<dict>
					<key>source</key>
					<dict/>
				</dict>
				<key>AMProvides</key>
				<dict>
					<key>Container</key>
					<string>List</string>
					<key>Types</key>
					<array>
						<string>com.apple.applescript.object</string>
					</array>
				</dict>
				<key>ActionBundlePath</key>
				<string>/System/Library/Automator/Run AppleScript.action</string>
				<key>ActionName</key>
				<string>Run AppleScript</string>
				<key>ActionParameters</key>
				<dict>
					<key>source</key>
					<string>on run {input, parameters}	set pathtome to (path to me)set pathvar to POSIX path of pathtomeset dwelip to "192.168.1.1"tell application "Finder"	set mounted_Disks to list disks	--display dialog result as string	--set mounted_Disks to every disk whose (ejectable is true)	if mounted_Disks does not contain "data" then		mount volume "smb://" &amp; dwelip &amp; "/dwel/dwel/newDwel/data/" as user name "dwel" with password "2las3rs"	end if	set mountFolder to POSIX file "/Volumes/dwel/dwel/newDwel/data" as aliasend tellset timenow to tpdate(current date)set binfilename to ("waveform_" &amp; tpdate(current date))tell application "Finder"	set folderpath to (choose folder) -- sets file path to folder you selectend tellset command to (pathvar &amp; "./dwel_client " &amp; dwelip &amp; " " &amp; (POSIX path of folderpath as text) &amp; binfilename)try	#display dialog "Command: " &amp; command buttons "OK"	do shell script commandon error errMsg
	say "scan complete"	display dialog "ERROR: " &amp; errMsg buttons "OK" with icon 2end trydisplay dialog "Created Binary file " &amp; binfilename buttons "OK"set question to display dialog "Do you want to import the angle files" buttons {"Yes", "No"} default button 2set answer to button returned of question #set answer to "Yes"if answer is equal to "Yes" then	tell application "Finder"		set filesList to (sort (get files of mountFolder) by creation date)				try			duplicate (item 1 of filesList as alias) to folder folderpath			duplicate (item 2 of filesList as alias) to folder folderpath			duplicate (item 3 of filesList as alias) to folder folderpath		end try		set newfilesList to (sort (get files of folderpath) by creation date)	end tell	try		display dialog "Files Copied: " &amp; name of (item 1 of newfilesList) &amp; ", " &amp; name of (item 2 of newfilesList) &amp; ", " &amp; name of (item 3 of newfilesList) buttons "OK"	end tryend if		return inputend runon tpdate(mydate)	set y to text -4 thru -1 of ("0000" &amp; (year of mydate))	set m to text -2 thru -1 of ("00" &amp; ((month of mydate) as integer))	set d to text -2 thru -1 of ("00" &amp; (day of mydate))	set hrs to text -2 thru -1 of ("00" &amp; (hours of mydate))	set min to text -2 thru -1 of ("00" &amp; (minutes of mydate))	return y &amp; "-" &amp; m &amp; "-" &amp; d &amp; "-" &amp; hrs &amp; "-" &amp; minend tpdate</string>
				</dict>
				<key>BundleIdentifier</key>
				<string>com.apple.Automator.RunScript</string>
				<key>CFBundleVersion</key>
				<string>1.0.2</string>
				<key>CanShowSelectedItemsWhenRun</key>
				<false/>
				<key>CanShowWhenRun</key>
				<true/>
				<key>Category</key>
				<array>
					<string>AMCategoryUtilities</string>
				</array>
				<key>Class Name</key>
				<string>RunScriptAction</string>
				<key>InputUUID</key>
				<string>118E43FC-C6A0-489F-B675-B3401343E8B9</string>
				<key>Keywords</key>
				<array>
					<string>Run</string>
				</array>
				<key>OutputUUID</key>
				<string>89DCB877-E3AA-4FA3-9F20-36884E1BBB57</string>
				<key>UUID</key>
				<string>25334E4F-3900-435E-805A-6B28A5D78329</string>
				<key>UnlocalizedApplications</key>
				<array>
					<string>Automator</string>
				</array>
				<key>arguments</key>
				<dict>
					<key>0</key>
					<dict>
						<key>default value</key>
						<string>on run {input, parameters}
	
	(* Your script goes here *)
	
	return input
end run</string>
						<key>name</key>
						<string>source</string>
						<key>required</key>
						<string>0</string>
						<key>type</key>
						<string>0</string>
						<key>uuid</key>
						<string>0</string>
					</dict>
				</dict>
				<key>isViewVisible</key>
				<true/>
				<key>location</key>
				<string>498.500000:482.000000</string>
				<key>nibPath</key>
				<string>/System/Library/Automator/Run AppleScript.action/Contents/Resources/English.lproj/main.nib</string>
			</dict>
			<key>isViewVisible</key>
			<true/>
		</dict>
	</array>
	<key>connectors</key>
	<dict/>
	<key>workflowMetaData</key>
	<dict>
		<key>workflowTypeIdentifier</key>
		<string>com.apple.Automator.application</string>
	</dict>
</dict>
</plist>
