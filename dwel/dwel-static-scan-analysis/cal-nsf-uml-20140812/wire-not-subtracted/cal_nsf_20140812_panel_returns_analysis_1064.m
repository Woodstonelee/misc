%% Analysis of cal_nsf_20140812 panel returns at 1064 nm
% Panels returns from stationary scans are summarized in ascii files after
% cleanning up most noise points. Now further clean up outliers in the panel
% returns by inspecting panel returns at each range and each wavelength. Then
% calculate the mean intensity, mean range and their standard deviations for
% four panels of different reflectances. Record the outlier detection
% criteria for later fast processing. 

indir = ['/projectnb/echidna/lidar/DWEL_Processing/DWEL_TestCal/cal-nsf-' ...
         '20140812/cal-nsf-20140812-panel-returns-summary']; 

infiles = { ...
'cal_nsf_20140812_0.5_1064_cube_bsfix_pxc_update_ptcl_points_panel_returns.txt'...
'cal_nsf_20140812_1.5_1064_cube_bsfix_pxc_update_ptcl_points_panel_returns.txt'...
'cal_nsf_20140812_10_1064_cube_bsfix_pxc_update_ptcl_points_panel_returns.txt'...
'cal_nsf_20140812_11_1064_cube_bsfix_pxc_update_ptcl_points_panel_returns.txt'...
'cal_nsf_20140812_12_1064_cube_bsfix_pxc_update_ptcl_points_panel_returns.txt'...
'cal_nsf_20140812_13_1064_cube_bsfix_pxc_update_ptcl_points_panel_returns.txt'...
'cal_nsf_20140812_14_1064_cube_bsfix_pxc_update_ptcl_points_panel_returns.txt'...
'cal_nsf_20140812_15_1064_cube_bsfix_pxc_update_ptcl_points_panel_returns.txt'...
'cal_nsf_20140812_1_1064_cube_bsfix_pxc_update_ptcl_points_panel_returns.txt'...
'cal_nsf_20140812_2.5_1064_cube_bsfix_pxc_update_ptcl_points_panel_returns.txt'...
'cal_nsf_20140812_20_1064_cube_bsfix_pxc_update_ptcl_points_panel_returns.txt'...
'cal_nsf_20140812_25_1064_cube_bsfix_pxc_update_ptcl_points_panel_returns.txt'...
'cal_nsf_20140812_2_1064_cube_bsfix_pxc_update_ptcl_points_panel_returns.txt'...
'cal_nsf_20140812_3.5_1064_cube_bsfix_pxc_update_ptcl_points_panel_returns.txt'...
'cal_nsf_20140812_30_1064_cube_bsfix_pxc_update_ptcl_points_panel_returns.txt'...
'cal_nsf_20140812_35_1064_cube_bsfix_pxc_update_ptcl_points_panel_returns.txt'...
'cal_nsf_20140812_3_1064_cube_bsfix_pxc_update_ptcl_points_panel_returns.txt'...
'cal_nsf_20140812_4.5_1064_cube_bsfix_pxc_update_ptcl_points_panel_returns.txt'...
'cal_nsf_20140812_40_1064_cube_bsfix_pxc_update_ptcl_points_panel_returns.txt'...
'cal_nsf_20140812_4_1064_cube_bsfix_pxc_update_ptcl_points_panel_returns.txt'...
'cal_nsf_20140812_5.5_1064_cube_bsfix_pxc_update_ptcl_points_panel_returns.txt'...
'cal_nsf_20140812_50_1064_cube_bsfix_pxc_update_ptcl_points_panel_returns.txt'...
'cal_nsf_20140812_5_1064_cube_bsfix_pxc_update_ptcl_points_panel_returns.txt'...
'cal_nsf_20140812_6.5_1064_cube_bsfix_pxc_update_ptcl_points_panel_returns.txt'...
'cal_nsf_20140812_60_1064_cube_bsfix_pxc_update_ptcl_points_panel_returns.txt'...
'cal_nsf_20140812_6_1064_cube_bsfix_pxc_update_ptcl_points_panel_returns.txt'...
'cal_nsf_20140812_7.5_1064_cube_bsfix_pxc_update_ptcl_points_panel_returns.txt'...
'cal_nsf_20140812_70_1064_cube_bsfix_pxc_update_ptcl_points_panel_returns.txt'...
'cal_nsf_20140812_7_1064_cube_bsfix_pxc_update_ptcl_points_panel_returns.txt'...
'cal_nsf_20140812_8.5_1064_cube_bsfix_pxc_update_ptcl_points_panel_returns.txt'...
'cal_nsf_20140812_8_1064_cube_bsfix_pxc_update_ptcl_points_panel_returns.txt'...
'cal_nsf_20140812_9.5_1064_cube_bsfix_pxc_update_ptcl_points_panel_returns.txt'...
'cal_nsf_20140812_9_1064_cube_bsfix_pxc_update_ptcl_points_panel_returns.txt'...
};

fnum = 33; % fnum: 1~33

% for fnum=1:33
% get the range from the file name
tmpstr = strsplit(infiles{fnum}, '_');
panelrange = str2num(tmpstr{4});
fprintf('panel at %f m\n', panelrange);

if panelrange < 5.0 
    % do not analyze panels closer than 5.0 because the panel returns can't
    % be reliably extracted due to possible mixing with wire signal
    %return
    % continue
end

% read the data of panel returns
filename = fullfile(indir, infiles{fnum});
fid = fopen(filename, 'r');
data = textscan(fid, repmat('%f', 1, 6), 'HeaderLines', 1, 'Delimiter', ',');
fclose(fid);

if isempty(data{2})
    return;
    %continue;
end

data = cell2mat(data);

fprintf('Number of saturated shots: %d\n', sum(data(:,6)));
fprintf('First 10 shots, line index:\n');
data(1:10,5)

x = 1:size(data, 1);
% plot intensity and range
figure('Name', ['1064 nm at ', num2str(panelrange), 'm']);
[hax, h1, h2] = plotyy(x, data(:,3), x, data(:, 1));
set(h1, 'linestyle', 'none', 'marker', '.', 'color', 'r');
set(hax(1), 'ycolor', 'r')
set(h2, 'linestyle', 'none', 'marker', '.', 'color', 'b');
set(hax(2), 'ycolor', 'b')
title(['Extracted points of panel returns from 1064 nm at ', num2str(panelrange), ...
       'm']);
xlabel('Laser shot sequence number');
ylabel(hax(1), 'range');
ylabel(hax(2), 'intensity after pre-processing, not scaled');
% plot saturation mask
tmpylim = ylim(hax(1));
tmpy = (tmpylim(2)-tmpylim(1))*data(:, 6)+tmpylim(1)*ones(size(data(:,6)));
hold on;
plot(hax(1), x, tmpy, '-og');
saveas(gcf, [filename(1:end-4), '.fig']);
print(gcf, [filename(1:end-4), '.png'], '-dpng','-r300','-painters');
%close(gcf);
%end